SCOPE="/subscriptions/eb940d7e-b120-4388-bbe7-4bee414e415b/resourceGroups/dqe3-d-rg/providers/Microsoft.DataFactory/factories/dqe3-d-01-adf"

SUBSCRIPTION_ID=$(echo "$SCOPE" | cut -d'/' -f3)
RESOURCE_GROUP=$(echo "$SCOPE" | awk -F'/' '{for (i=1; i<=NF; i++) if ($i=="resourceGroups") print $(i+1)}')
RESOURCE_TYPE=$(echo "$SCOPE" | awk -F'/' '{for (i=1; i<=NF; i++) if ($i=="providers") print $(i+2)}')
RESOURCE_NAME=$(echo "$SCOPE" | awk -F'/' '{print $NF}')
NAMESPACE=$(echo "$SCOPE" | awk -F'/' '{for (i=1; i<=NF; i++) if ($i=="providers") print $(i+1)}')

echo "Scope: $SCOPE"
echo "Subscription ID: $SUBSCRIPTION_ID"
echo "RG: $RESOURCE_GROUP"
echo "Type: $RESOURCE_TYPE"
echo "Name: $RESOURCE_NAME"
echo "Namespace: $NAMESPACE"

az account set --subscription "$SUBSCRIPTION_ID"

locks=$(az lock list \
  --resource-group "$RESOURCE_GROUP" \
  --namespace "$NAMESPACE" \
  --resource-type "$RESOURCE_TYPE" \
  --resource-name "$RESOURCE_NAME" \
  -o json)

echo "Locks JSON: $locks"

# Optional: check if array is empty before processing
if [ "$(echo "$locks" | jq length)" -eq 0 ]; then
    echo "No locks found."
else
    echo "Locks found:"
    echo "$locks" | jq .
fi
