- task: AzureCLI@2
  displayName: "Restore Locks"
  inputs:
    azureSubscription: '${{ variables.ResourceGroupName }}'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      LOCK_FILE="$(Pipeline.Workspace)/locks_artifact/locks.json"

      echo "üîÅ Reading lock data from: $LOCK_FILE"

      if [ ! -f "$LOCK_FILE" ]; then
        echo "‚ùå Lock file not found: $LOCK_FILE"
        exit 1
      fi

      LOCKS_JSON=$(cat "$LOCK_FILE")

      echo "$LOCKS_JSON" | jq '.' || {
        echo "‚ùå Invalid JSON content in lock file"
        exit 1
      }

      if [ "$(echo "$LOCKS_JSON" | jq 'length')" -eq 0 ]; then
        echo "‚úÖ No locks to restore."
        exit 0
      fi

      for row in $(echo "$LOCKS_JSON" | jq -r '.[] | @base64'); do
        _jq() {
          echo "${row}" | base64 --decode | jq -r "$1"
        }

        LOCK_NAME=$(_jq '.name')
        LOCK_LEVEL=$(_jq '.level')
        LOCK_ID=$(_jq '.id')
        LOCK_SCOPE=$(echo "$LOCK_ID" | sed 's|/providers/.*||')

        echo "Restoring lock: $LOCK_NAME at $LOCK_SCOPE"
        az lock create \
          --name "$LOCK_NAME" \
          --lock-type "$LOCK_LEVEL" \
          --scope "$LOCK_SCOPE"

        echo "‚úÖ Lock '$LOCK_NAME' restored."
      done
